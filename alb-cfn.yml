AWSTemplateFormatVersion: '2010-09-09'
Parameters:
    VpcName: 
      Type: "String"
Resources:
  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
        Subnets:
        - {'Fn::ImportValue': !Sub '${VpcName}-public-a'}
        - {'Fn::ImportValue': !Sub '${VpcName}-public-b'}
        SecurityGroups: [{'Fn::ImportValue': !Sub '${VpcName}-sg-alltraffic'}]
        Scheme: internet-facing
        Name: !Sub "${VpcName}-alb-wp"
  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn:
          Ref: ALBTargetGroup
      LoadBalancerArn:
        Ref: ApplicationLoadBalancer
      Port: '80'
      Protocol: HTTP
  ALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub "${VpcName}-tg1-wp"
      HealthCheckIntervalSeconds: 10
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      HealthCheckPath: /blogs/healthcheck.html
      VpcId: {'Fn::ImportValue': !Sub "${VpcName}-vpcid"}
Outputs:
  DNSName:
    Description: 'The DNS name for the Application load balancer.'
    Value: !GetAtt 'ApplicationLoadBalancer.DNSName'
    Export:
      Name: !Sub '${VpcName}-DNSName'
  TargetGroupArn:
    Description: 'The ARN for the Target Group.'
    Value:
      Ref: "ALBTargetGroup"
    Export:
      Name: !Sub '${VpcName}-targetgroup-arn'