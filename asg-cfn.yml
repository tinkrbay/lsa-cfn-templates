AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  VpcName:
    Type: String
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
  ImageId:
    Type: String	
Resources:
  ASGInstanceRole: 
    Type: "AWS::IAM::Role"
    Properties: 
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "ec2.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/"
      Policies: 
        - 
          PolicyName: "ASGFullAccess"
          PolicyDocument: 
            Version: "2012-10-17"
            Statement: 
              - 
                Effect: "Allow"
                Action: "*"
                Resource: "*"
  ASGInstanceProfile: 
    Type: "AWS::IAM::InstanceProfile"
    Properties: 
      Path: "/"
      Roles: 
        - 
          Ref: "ASGInstanceRole"
  LaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: !Ref 'ImageId'
      KeyName: !Ref 'KeyName'
      IamInstanceProfile:
        Ref: ASGInstanceProfile
      SecurityGroups: [{'Fn::ImportValue': !Sub '${VpcName}-sg-alltraffic'}]
      InstanceType: t2.micro
  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MaxBatchSize: '1'
        MinInstancesInService: '1'
        PauseTime: PT15M
        WaitOnResourceSignals: 'true'
    Properties:
      Tags:
      - Key: Name
        Value: !Sub '${VpcName}-wp-asg1'
        PropagateAtLaunch: true
      LaunchConfigurationName: !Ref 'LaunchConfig'
      MinSize: '1'
      MaxSize: '6'
      DesiredCapacity: '1'
      HealthCheckType: "ELB"
      HealthCheckGracePeriod: '300'
      Cooldown: 60
      TargetGroupARNs: [{'Fn::ImportValue': !Sub "${VpcName}-targetgroup-arn"}]
      VPCZoneIdentifier: 
      - {'Fn::ImportValue': !Sub "${VpcName}-public-a"}
      - {'Fn::ImportValue': !Sub "${VpcName}-public-b"}
  ScaleUpPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName:
        Ref: AutoScalingGroup
      Cooldown: '60'
      PolicyType: SimpleScaling
      ScalingAdjustment: '1'
  ScaleDownPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName:
        Ref: AutoScalingGroup
      Cooldown: '60'
      PolicyType: SimpleScaling
      ScalingAdjustment: '-1'
  CPUAlarmHigh:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Scale-up if CPU > 5% for 1 minutes
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: '60'
      EvaluationPeriods: '1'
      Threshold: '5'
      AlarmActions:
      - Ref: ScaleUpPolicy
      Dimensions:
      - Name: AutoScalingGroupName
        Value:
          Ref: AutoScalingGroup
      ComparisonOperator: GreaterThanThreshold
  CPUAlarmLow:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Scale-down if CPU < 3% for 1 minute
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: '60'
      EvaluationPeriods: '3'
      Threshold: '3'
      AlarmActions:
      - Ref: ScaleDownPolicy
      Dimensions:
      - Name: AutoScalingGroupName
        Value:
          Ref: AutoScalingGroup
      ComparisonOperator: LessThanThreshold