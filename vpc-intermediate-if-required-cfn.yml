---
  AWSTemplateFormatVersion: "2010-09-09"
  Description: "myvpc2"
  Mappings:
    SubnetConfig:
      myvpc2:
        CIDR: "10.0.0.0/16"
      myvpc2public1a:
        CIDR: "10.0.1.0/24"
      myvpc2public1b:
        CIDR: "10.0.2.0/24"
      myvpc2private1a:
        CIDR: "10.0.3.0/24"
      myvpc2private1b:
        CIDR: "10.0.4.0/24"
  Resources:
    myvpc2:
      Type: "AWS::EC2::VPC"
      Properties:
        EnableDnsSupport: "true"
        EnableDnsHostnames: "true"
        CidrBlock:
          Fn::FindInMap:
            - "SubnetConfig"
            - "myvpc2"
            - "CIDR"
        Tags:
          -
            Key: "Application"
            Value:
              Ref: "AWS::StackName"
          -
            Key: "Name"
            Value: "myvpc2"
    myvpc2public1a:
      Type: "AWS::EC2::Subnet"
      Properties:
        VpcId:
          Ref: "myvpc2"
        CidrBlock:
          Fn::FindInMap:
            - "SubnetConfig"
            - "myvpc2public1a"
            - "CIDR"
        MapPublicIpOnLaunch: "true"
        Tags:
          -
            Key: "Application"
            Value:
              Ref: "AWS::StackName"
          -
            Key: "Name"
            Value: "myvpc2public1a"
    myvpc2private1a:
      Type: "AWS::EC2::Subnet"
      Properties:
        VpcId:
          Ref: "myvpc2"
        CidrBlock:
          Fn::FindInMap:
            - "SubnetConfig"
            - "myvpc2private1a"
            - "CIDR"
        Tags:
          -
            Key: "Application"
            Value:
              Ref: "AWS::StackName"
          -
            Key: "Name"
            Value: "myvpc2private1a"
    myvpc2public1b:
      Type: "AWS::EC2::Subnet"
      Properties:
        VpcId:
          Ref: "myvpc2"
        CidrBlock:
          Fn::FindInMap:
            - "SubnetConfig"
            - "myvpc2public1b"
            - "CIDR"
        MapPublicIpOnLaunch: "true"
        Tags:
          -
            Key: "Application"
            Value:
              Ref: "AWS::StackName"
          -
            Key: "Name"
            Value: "myvpc2public1b"
    myvpc2private1b:
      Type: "AWS::EC2::Subnet"
      Properties:
        VpcId:
          Ref: "myvpc2"
        CidrBlock:
          Fn::FindInMap:
            - "SubnetConfig"
            - "myvpc2private1b"
            - "CIDR"
        Tags:
          -
            Key: "Application"
            Value:
              Ref: "AWS::StackName"
          -
            Key: "Name"
            Value: "myvpc2private1b"
    myvpc2igw:
      Type: "AWS::EC2::InternetGateway"
      Properties:
        Tags:
          -
            Key: "Application"
            Value:
              Ref: "AWS::StackName"
          -
            Key: "Name"
            Value: "myvpc2igw"
    myvpc2igwattachment:
      Type: "AWS::EC2::VPCGatewayAttachment"
      Properties:
        VpcId:
          Ref: "myvpc2"
        InternetGatewayId:
          Ref: "myvpc2igw"
    myvpc2publicrt:
      Type: "AWS::EC2::RouteTable"
      Properties:
        VpcId:
          Ref: "myvpc2"
        Tags:
          -
            Key: "Application"
            Value:
              Ref: "AWS::StackName"
          -
            Key: "Name"
            Value: "myvpc2publicrt"
    myvpc2publicdefaultroute:
      Type: "AWS::EC2::Route"
      DependsOn: "myvpc2igwattachment"
      Properties:
        RouteTableId:
          Ref: "myvpc2publicrt"
        DestinationCidrBlock: "0.0.0.0/0"
        GatewayId:
          Ref: "myvpc2igw"
    myvpc2publicrtmyvpc2public1a:
      Type: "AWS::EC2::SubnetRouteTableAssociation"
      Properties:
        SubnetId:
          Ref: "myvpc2public1a"
        RouteTableId:
          Ref: "myvpc2publicrt"
    myvpc2publicrtmyvpc2public1b:
      Type: "AWS::EC2::SubnetRouteTableAssociation"
      Properties:
        SubnetId:
          Ref: "myvpc2public1b"
        RouteTableId:
          Ref: "myvpc2publicrt" 
    myvpc2privatert:
      Type: "AWS::EC2::RouteTable"
      Properties:
        VpcId:
          Ref: "myvpc2"
        Tags:
          -
            Key: "Application"
            Value:
              Ref: "AWS::StackName"
          -
            Key: "Name"
            Value: "myvpc2privatert"
    myvpc2publicrtmyvpc2private1a:
      Type: "AWS::EC2::SubnetRouteTableAssociation"
      Properties:
        SubnetId:
          Ref: "myvpc2private1a"
        RouteTableId:
          Ref: "myvpc2privatert"
    myvpc2publicrtmyvpc2private1b:
      Type: "AWS::EC2::SubnetRouteTableAssociation"
      Properties:
        SubnetId:
          Ref: "myvpc2private1b"
        RouteTableId:
          Ref: "myvpc2privatert"    
    myvpc2publicnacl:
      Type: "AWS::EC2::NetworkAcl"
      Properties:
        VpcId:
          Ref: "myvpc2"
        Tags:
          -
            Key: "Application"
            Value:
              Ref: "AWS::StackName"
          -
            Key: "Name"
            Value: "myvpc2publicnacl"
    myvpc2publicnaclinbound:
      Type: "AWS::EC2::NetworkAclEntry"
      Properties:
        NetworkAclId:
          Ref: "myvpc2publicnacl"
        RuleNumber: "100"
        Protocol: "-1"
        RuleAction: "allow"
        Egress: "false"
        CidrBlock: "0.0.0.0/0"
        PortRange:
          From: "0"
          To: "65535"
    myvpc2publicnacloutbound:
      Type: "AWS::EC2::NetworkAclEntry"
      Properties:
        NetworkAclId:
          Ref: "myvpc2publicnacl"
        RuleNumber: "100"
        Protocol: "-1"
        RuleAction: "allow"
        Egress: "true"
        CidrBlock: "0.0.0.0/0"
        PortRange:
          From: "0"
          To: "65535"
    myvpc2publicnaclpublic1aassociation:
      Type: "AWS::EC2::SubnetNetworkAclAssociation"
      Properties:
        SubnetId:
          Ref: "myvpc2public1a"
        NetworkAclId:
          Ref: "myvpc2publicnacl"
    myvpc2publicnaclpublic1bassociation:
      Type: "AWS::EC2::SubnetNetworkAclAssociation"
      Properties:
        SubnetId:
          Ref: "myvpc2public1b"
        NetworkAclId:
          Ref: "myvpc2publicnacl" 
    myvpc2privatenacl:
      Type: "AWS::EC2::NetworkAcl"
      Properties:
        VpcId:
          Ref: "myvpc2"
        Tags:
          -
            Key: "Application"
            Value:
              Ref: "AWS::StackName"
          -
            Key: "Name"
            Value: "myvpc2privatenacl"
    myvpc2privatenaclinbound:
      Type: "AWS::EC2::NetworkAclEntry"
      Properties:
        NetworkAclId:
          Ref: "myvpc2privatenacl"
        RuleNumber: "100"
        Protocol: "-1"
        RuleAction: "allow"
        Egress: "false"
        CidrBlock: "0.0.0.0/0"
        PortRange:
          From: "0"
          To: "65535"
    myvpc2privatenacloutbound:
      Type: "AWS::EC2::NetworkAclEntry"
      Properties:
        NetworkAclId:
          Ref: "myvpc2privatenacl"
        RuleNumber: "100"
        Protocol: "-1"
        RuleAction: "allow"
        Egress: "true"
        CidrBlock: "0.0.0.0/0"
        PortRange:
          From: "0"
          To: "65535"
    myvpc2publicnaclprivate1aassociation:
      Type: "AWS::EC2::SubnetNetworkAclAssociation"
      Properties:
        SubnetId:
          Ref: "myvpc2private1a"
        NetworkAclId:
          Ref: "myvpc2privatenacl"
    myvpc2publicnaclprivate1bassociation:
      Type: "AWS::EC2::SubnetNetworkAclAssociation"
      Properties:
        SubnetId:
          Ref: "myvpc2private1b"
        NetworkAclId:
          Ref: "myvpc2privatenacl"
    myvpc2securitygroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: Allows all inbound and outbound traffic
        VpcId:
          Ref: myvpc2
        SecurityGroupIngress:
        - IpProtocol: -1
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
        SecurityGroupEgress:
        - IpProtocol: -1
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0		  
  Outputs:
    myvpc2:
      Description: "VPC ID of myvpc2"
      Value:
        Ref: "myvpc2"
      Export:
        Name:
          myvpc2vpcid
    myvpc2public1a:
      Description: "SubnetId of the public-1a subnet"
      Value:
        Ref: "myvpc2public1a"
      Export:
        Name:
          myvpc2public1a
    myvpc2public1b:
      Description: "SubnetId of the public-1b subnet"
      Value:
        Ref: "myvpc2public1b"
      Export:
        Name:
          myvpc2public1b
    myvpc2private1a:
      Description: "SubnetId of the private-1a subnet"
      Value:
        Ref: "myvpc2private1a"
      Export:
        Name:
          myvpc2private1a
    myvpc2private1b:
      Description: "SubnetId of the private-1b subnet"
      Value:
        Ref: "myvpc2private1b"
      Export:
        Name:
          myvpc2private1b
    myvpc2publicrt:
      Description: "RouteTableId of the myvpc2 Public Routing Table"
      Value:
        Ref: "myvpc2publicrt"
      Export:
        Name:
          myvpc2publicrt
    myvpc2privatert:
      Description: "RouteTableId of the myvpc2 Private Routing Table"
      Value:
        Ref: "myvpc2privatert"
      Export:
        Name:
          myvpc2privatert
    myvpc2DefaultSecurityGroup:
      Description: "DefaultSecurityGroup Id "
      Value: { "Fn::GetAtt" : ["myvpc2", "DefaultSecurityGroup"] }
      Export:
        Name:
          myvpc2-DefaultSecurityGroup
    myvpc2securitygroup:
      Description: "SeccurityGroupId of the myvpc1securitygroup"
      Value: { "Fn::GetAtt" : ["myvpc2securitygroup", "GroupId"] }
      Export:
        Name:
          myvpc2securitygroup		  
